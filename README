DESCRIPTION:

A simple wallet microservice running on the JVM that manages credit/debit transactions on behalf of players.
A monetary account holds the current balance for a player. The balance can be modified by registering transactions on the account, either debit
transactions (removing funds) or credit transactions (adding funds).

It is based on a programming challenge found on the internet, and meant to be used for educational purposes only.

An Angular frontend for it is available on  https://github.com/malandrakisgeo/micro-frontend  .

--------------------------------------------
THE CHALLENGE: 
The programmer was supposed to create a REST API and an implementation that fulfils the requirements detailed
below and honours the constraints.

Requirements and desired functionalities: 
• Current balance per player
• Debit /Withdrawal per player A debit transaction will only succeed if there are
sufficient funds on the account (balance - debit amount >= 0). If the transaction id is not unique, the operation must fail.
• Credit per player.
• Transaction history per player
• The solution need not persist data across restarts but it is a bonus if it does.

-------------------------------------------

BEFORE YOU BEGIN:
Make sure you create a mySQL database where the SQL script available in /resources/database.sql can be run.
Manage to modify the /resources/application.properties inserting  your own credentials.
-----------------------------------------------------------------------------------------------------

HOW TO RUN:
Just run the program in any Java IDE. It was made with IntelliJ, and it should not be a problem to run it on e.g. NetBeans or Eclipse.

The default url of the backend is http://localhost:8080/.
The frontend is supposed to send requests from http://localhost:4200.

